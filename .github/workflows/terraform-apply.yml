name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        type: choice
        options:
          - staging

jobs:
  Terraform-Deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}  # Use selected environment

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="key=${{ github.event.inputs.environment }}/terraform.tfstate"

    - name: Select Terraform Workspace
      run: terraform workspace select ${{ github.event.inputs.environment }} || terraform workspace new ${{ github.event.inputs.environment }}

    - name: Terraform Validate
      run: terraform validate 

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="ecs_cluster_name=${{ secrets.TF_VAR_ECS_CLUSTER_NAME }}" \
          -var="ecs_task_family=${{ secrets.TF_VAR_ECS_TASK_FAMILY }}" \
          -var="ecs_service_name=${{ secrets.TF_VAR_ECS_SERVICE_NAME }}"

    - name: Terraform Apply
      run: |
        terraform apply \
          -var="ecs_cluster_name=${{ secrets.TF_VAR_ECS_CLUSTER_NAME }}" \
          -var="ecs_task_family=${{ secrets.TF_VAR_ECS_TASK_FAMILY }}" \
          -var="ecs_service_name=${{ secrets.TF_VAR_ECS_SERVICE_NAME }}" \
          --auto-approve

