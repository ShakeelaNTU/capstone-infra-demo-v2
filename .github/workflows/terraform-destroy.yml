name: Terraform Destroy

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        type: choice
        options:
          - staging
          - production

env:            
  AWS_REGION: ap-southeast-1  

jobs:
  Destroy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: |
        rm -rf .terraform
        terraform init \
          -backend-config="bucket=YOUR_TERRAFORM_BUCKET" \
          -backend-config="key=terraform/ce8-coaching-18/${{ github.event.inputs.environment }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Verify State Exists
      run: |
        aws s3 ls s3://YOUR_TERRAFORM_BUCKET/terraform/ce8-coaching-18/${{ github.event.inputs.environment }}/terraform.tfstate || \
        (echo "::error::State file missing!"; exit 1)

    - name: Select Workspace
      run: |
        terraform workspace select ${{ github.event.inputs.environment }} || \
        terraform workspace new ${{ github.event.inputs.environment }}

    - name: Set Precise Variables
      run: |
        echo "TF_VAR_ecs_cluster_name=staging-cluster" >> $GITHUB_ENV
        echo "TF_VAR_ecs_task_family=staging-task-family" >> $GITHUB_ENV
        echo "TF_VAR_dynamodb_table_name=staging-staging-dynamodb-table" >> $GITHUB_ENV
        echo "TF_VAR_ecs_service_name=staging-service" >> $GITHUB_ENV
        echo "TF_VAR_container_name=staging-container" >> $GITHUB_ENV
        echo "TF_VAR_ecr_repository=staging-repository" >> $GITHUB_ENV

    - name: Destroy Infrastructure
      run: |
        terraform plan -destroy -out=tfplan
        terraform apply -auto-approve tfplan