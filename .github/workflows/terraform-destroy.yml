name: Terraform Destroy

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        type: choice
        options:
          - staging
          - production

env:            
  AWS_REGION: ap-southeast-1  

jobs:
  Destroy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: |
        rm -rf .terraform
        terraform init \
          -backend-config="bucket=${{ secrets.S3_BUCKET }}" \
          -backend-config="key=terraform/ce8-coaching-18/${{ github.event.inputs.environment }}/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Set Prefixed Variables from Secrets
      run: |
        ENV_PREFIX="${{ github.event.inputs.environment }}"
        echo "ecs_cluster_name=${ENV_PREFIX}-${{ vars.ECS_CLUSTER_NAME }}" >> $GITHUB_ENV
        echo "ecs_task_family=${ENV_PREFIX}-${{ vars.ECS_TASK_FAMILY }}" >> $GITHUB_ENV
        echo "dynamodb_table_name=${ENV_PREFIX}-${{ vars.DYNAMODB_TABLE_NAME }}" >> $GITHUB_ENV
        echo "ecs_service_name=${ENV_PREFIX}-${{ vars.ECS_SERVICE_NAME }}" >> $GITHUB_ENV
        echo "container_name=${ENV_PREFIX}-${{ vars.CONTAINER_NAME }}" >> $GITHUB_ENV
        echo "ecr_repository=${{ vars.ECR_REPOSITORY }}" >> $GITHUB_ENV
        echo "environment=${ENV_PREFIX}" >> $GITHUB_ENV

    - name: Validate Variables
      run: |
        echo "ECS Cluster: ${{ env.ecs_cluster_name }}"
        echo "Task Family: ${{ env.ecs_task_family }}"
        echo "DynamoDB Table: ${{ env.dynamodb_table_name }}"
        echo "ECS Service: ${{ env.ecs_service_name }}"
        echo "Container: ${{ env.container_name }}"
        echo "ECR Repo: ${{ env.ecr_repository }}"
        

    - name: Terraform Destroy
      run: terraform destroy -auto-approve